(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     58790,       1209]
NotebookOptionsPosition[     56886,       1143]
NotebookOutlinePosition[     57239,       1159]
CellTagsIndexPosition[     57196,       1156]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Phase estimation", "Subsubsection",
 CellChangeTimes->{{3.685270584386465*^9, 3.6852705863508787`*^9}}],

Cell["How many photons do we need to estimate phase?", "Text",
 CellChangeTimes->{{3.6820635669773283`*^9, 3.6820635710673647`*^9}, {
  3.682063752341361*^9, 3.6820637558216963`*^9}, {3.68206384399514*^9, 
  3.682063849378477*^9}, {3.682064895724379*^9, 3.682064932803775*^9}, {
  3.685269178597093*^9, 3.6852691810749702`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numPhotons", "=", "100."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"phaseError", "=", 
  RowBox[{"1", "/", 
   SqrtBox["numPhotons"]}]}], "\[IndentingNewLine]", 
 RowBox[{"phaseErrorDegrees", "=", 
  RowBox[{
   FractionBox["180", "\[Pi]"], "phaseError"}]}], "\[IndentingNewLine]", 
 RowBox[{"fid", "=", 
  RowBox[{"1", "-", 
   RowBox[{
    FractionBox["1", "4"], 
    SuperscriptBox["phaseError", "2"]}]}]}]}], "Input",
 CellChangeTimes->{{3.682063758323977*^9, 3.682063768917552*^9}, {
   3.682063815596447*^9, 3.682063826028224*^9}, {3.682063858147896*^9, 
   3.682063887299223*^9}, {3.68206450949328*^9, 3.6820645776221943`*^9}, 
   3.682064689146049*^9, {3.682064852632402*^9, 3.682064865973854*^9}, {
   3.682068762318097*^9, 3.6820687730612183`*^9}, {3.685269205976164*^9, 
   3.685269222894985*^9}}],

Cell["Here is why:", "Text",
 CellChangeTimes->{{3.6859563365571537`*^9, 3.6859563383313313`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"state", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"1", "/", 
        SqrtBox["2"]}], ",", 
       RowBox[{"1", "/", 
        SqrtBox["2"]}], ",", "0"}], "}"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"statePhase", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"1", "/", 
         SqrtBox["2"]}], ",", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "]"}], "/", 
         SqrtBox["2"]}], ",", "0"}], "}"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{"state", ".", 
    RowBox[{"state", "\[ConjugateTranspose]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]Phase", "=", 
   RowBox[{"statePhase", ".", 
    RowBox[{"statePhase", "\[ConjugateTranspose]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.685955771374032*^9, 3.685955936180352*^9}, {
  3.6859560359176693`*^9, 3.685956051494114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Fidelity", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Plus", "@@", 
      RowBox[{"(", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"a", ".", "b"}], "]"}], "]"}], ")"}]}], ")"}], "^", "2"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Fidelity", "[", 
    RowBox[{"\[Rho]", ",", "\[Rho]Phase"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.685956028736144*^9, 3.685956073145649*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Cos", "[", 
   FractionBox["\[Theta]", "2"], "]"}], "2"]], "Output",
 CellChangeTimes->{{3.685956063356266*^9, 3.685956073442898*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ComplexExpand", "[", 
   SuperscriptBox[
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"state", "\[ConjugateTranspose]"}], ".", "statePhase"}], 
       ")"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "2"], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.685956090286371*^9, 3.6859561404186707`*^9}, {
  3.685956192474403*^9, 3.685956317269915*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Cos", "[", 
   FractionBox["\[Theta]", "2"], "]"}], "2"]], "Output",
 CellChangeTimes->{
  3.685956268144823*^9, {3.685956301523075*^9, 3.685956317904269*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]", "2"], "]"}], "2"], 
     FractionBox[
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["\[Theta]", "\[Sigma]"], ")"}], "2"]}], "]"}], 
      RowBox[{"\[Sigma]", " ", 
       SqrtBox[
        RowBox[{"2", " ", "\[Pi]"}]]}]]}], "/.", 
    RowBox[{"\[Sigma]", "\[Rule]", "0.25"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6859563433821487`*^9, 3.685956390816958*^9}, {
  3.6859564285577383`*^9, 3.6859564889601927`*^9}}],

Cell[BoxData[
 RowBox[{"0.9846166172381721`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.685956463728443*^9, 3.685956490440969*^9}}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{{3.6820645452565327`*^9, 3.682064578207632*^9}, 
   3.682064692693165*^9, {3.682064853048518*^9, 3.68206486627982*^9}, 
   3.68206877375731*^9, {3.685269194649651*^9, 3.685269225518127*^9}}],

Cell[BoxData["5.729577951308232`"], "Output",
 CellChangeTimes->{{3.6820645452565327`*^9, 3.682064578207632*^9}, 
   3.682064692693165*^9, {3.682064853048518*^9, 3.68206486627982*^9}, 
   3.68206877375731*^9, {3.685269194649651*^9, 3.6852692255298347`*^9}}],

Cell[BoxData["0.9975`"], "Output",
 CellChangeTimes->{{3.6820645452565327`*^9, 3.682064578207632*^9}, 
   3.682064692693165*^9, {3.682064853048518*^9, 3.68206486627982*^9}, 
   3.68206877375731*^9, {3.685269194649651*^9, 3.685269225539596*^9}}]
}, Open  ]],

Cell["\<\
At least 100 photons would be good. So about 100 mus to estimate phase after \
a click. \
\>", "Text",
 CellChangeTimes->{{3.6820649545710487`*^9, 3.6820649750186863`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estimator", "Subsubsection",
 CellChangeTimes->{{3.685270590365869*^9, 3.685270591254281*^9}}],

Cell["\<\
Just cus I feel like idiot checking that even a simple estimator can saturate \
the bound:\
\>", "Text",
 CellChangeTimes->{{3.682068025497793*^9, 3.682068038857606*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"out1PhotonNumber", "=", 
   RowBox[{"n", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "/", "2"}], "]"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out2PhotonNumber", "=", 
   RowBox[{"n", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "/", "2"}], "]"}], "2"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.682066930109949*^9, 3.6820669956542*^9}, {
  3.6820679825095863`*^9, 3.682067994418432*^9}, {3.685269632220976*^9, 
  3.6852696440849543`*^9}, {3.6852708292889223`*^9, 3.685270832621408*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thetaEst", "=", 
   RowBox[{"ArcCos", "[", 
    FractionBox[
     RowBox[{"out1", "-", "out2"}], 
     RowBox[{"out1", "+", "out2"}]], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.682067737380497*^9, 3.6820678068631783`*^9}, {
  3.682067852392417*^9, 3.682067861918079*^9}, {3.6852695579928083`*^9, 
  3.6852696026924553`*^9}, {3.6852696476892843`*^9, 3.685269655224309*^9}, {
  3.685269696667252*^9, 3.685269704249276*^9}, {3.685270437851239*^9, 
  3.6852704415363617`*^9}, {3.685270928994466*^9, 3.6852709299698553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"out1PhotonNumber", ",", "out2PhotonNumber"}], "}"}], "/.", 
     RowBox[{"n", "\[Rule]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"thetaEst", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"out1", "\[Rule]", "out1PhotonNumber"}], ",", 
        RowBox[{"out2", "\[Rule]", "out2PhotonNumber"}]}], "}"}]}], ",", 
     "\[Theta]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Dashed"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6852703491932096`*^9, 3.685270417046067*^9}, {
  3.685270483624448*^9, 3.685270533000617*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{-Pi, Pi}, {0., 0.9999999999999958}}, {{-3.141592653589793, 
    3.141592653589793}, {0., 0.9999999999999958}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685270375354426*^9, 3.685270417317894*^9}, 
   3.685270465495165*^9, {3.685270507596121*^9, 3.685270537343405*^9}, 
   3.6852708347037163`*^9, {3.6852709314786243`*^9, 3.6852709440084143`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1:eJxF1XtczXccx/FOnZzfkUiXU3SKxjIKXZB0+Xw1o4iSxdiGVXLZuqiWuURr
PbZ0vxw5FF10FLWuVrbU9xclxKRZj7R0Y0dCnaRH95rO9+vsj/fj+ef7z5eR
h5/bPmUlJaWj7zflRqeZn44a8Vl/ydIpkc7BUzLGkM86ElF7hOyCYC6f7SWi
I3cahsw1+awXEWVtOJt/QJnP5hDRxGfz5zZ2Mix3vVxU7GDRV3iJYQuJSN92
e5r3xwxrQET6Wzy1k7R4LBUFvDHvfq41jaUi7wGfkjVzVFkqihD6ndnK57JU
xHlk3hSjpsJSUU7W75ZRQxyWit6054dFdyuxVKTlXufl/XQSaxMh2/jWwMry
cUyFl5r2jq4Vo7iLCAfrk34MuDuMqbDufuBrQe4gpsKDzka9aUUDmApFVtXB
R6L7MRUavo4ulx3uw1RwsCv46eBgD15LhGSbXf0Dv3XjM0TY4Kcm1a2QYirk
z3tkY+/XiQuIYPivuLLrUAsWEOHcQIpaaMRjHEeEyYk4OzRUi18QIevmzmTv
67W4lAhOPy/ojf6hFlsRIUm9LP3J0G2cTYRFwlaVwOEabEEEF2vTe5KRW/gj
Iti/iP9VMIKxHREifBfu8TyGsRERGgbKNApHKnENEby5bYFOoxU4hQixRkvX
nBgrx5FEaP3y7u2OiTJsS4SQek57nkohznwoF0z1xILBGQV4FxH2xJn6iDTz
cXisXKgOcZ/70CAPryJC7K7soHUrcvCVnXJhgfamxcu/ScdDGnIhV4AnxQ8u
4lZtuaCh2pX3V1MqNidCc4c1z6lXjJ3a5YJfytNyS2EC/kQsF3K01BtatsTi
KnW5ECDbbeq2LxLvbpcLvKvKHbaJYdghXS5kql8J9toagnMlOVOCVa2zicvJ
7zFky4WznA4cuP1bbGTZNiWEvnR1S9y7A4evdpoSrrOh36kVAMBKR7k9WY7c
Game4Gq7UW6nOHSzfsZh2GFK3NLWIjYLOgpZT4kticK3mZdCYeYxombpvbNL
Y8LhRR3x5JjxM4e90dDeTmyOO1QtXRgPfqeJQRlrdfPmJIKZhHi1uvfGKpVk
aKwhCtScGefGC+DIED0SW8+7JuRDL5UzFm7yNr0AikeJ9cU6rU5fFMJRqr/w
hu+r/UVQSi3sZeKX/VICmjKiWXJmw7WaMjClivu6c/casXCZKrY3NPe5eAfC
qEmcUl09m8cgovp2l9TL6lvAh7pkw4LBz9M6YRG1ylOqnBojVZipcia3tb4b
MqjGvnaPoup6FOrpi0XaO/sU3kS8WR3B/QorN/XXevgPKNyj5+7iIRpU6HbP
UkdXNAzbqLxcq3e3To8q9NhclNFzZVzhzL+zY/6UTCpcPmv6QoFUCX3Quq5B
fe07jsJXw0+S18uUFfrzhbwoDldhWlSq4KqSqsJlkgKLmpH/TUgbXzlvOg8l
UlNnRDZt4zEohRpnsCK4Uo1BidSwZa1aizUYFE7d72rhMqHHIG+qhai5JmcJ
g8yod/RNSsY3M+g2tX/J/ZhsEYNkVKlNsInmOQZ1UZuc5989cYFBzdRK3yCu
22UGsdSIYuHxsTIGRVIN1/gc2PoPg4TU2Zt0p91oY5AWlftV1SXj5wxSo74M
0Wkbff3+l3qtqsL98gSDaqnZDfv7NVT4KJV6/tnshOM8PhJRT6l633fV4KNI
aoBA41C5Nh/to3ot+oNnPIePrKk7VntJ4g34SEql/UUf+vsf9Q+HLw==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxN1OlP0nEcwHEu/YmUoijghbqKlm42MGdJmtlhZSZa1mq1NjQ8NsWs4QNz
lj2hkJlJpqax8sCy4dWxMikzp6Y1ZOasTI2MJanDIUMjsNri8+3Be6//4B0s
EKWcIeBwuMQ//fXAfrdd1mDyS4feWcVGFxZyWmKso/siCwa0yxxPZEP8TVUm
AWnfE+Q7pnMBO+K4i231SL/tRxXCDf95KM2rgoaB+fMcwwzNGRSaczqjfJxA
ib/oRjKZBOJHOOMyChFsbngaLl3Gg/PTqpJSAw6kpQ6lCz+vvnCoZPeaI7ps
4KxnzD5+txXM0lRcyh9cAXcPn5ujt1jAt7oxpnO7GWyPfC0uKDWB2lOlXcaz
i2BcdOvlLMsCWMk7YTI/MoDxIoqe0a0HVYEjvBiRDmR9q1J/z54Aq823KBcl
o+CqvSw6drkfLNLgpx8Q20DB9ckafrlqh8OqGBYn5/YAWIF/zGDyRsFcQ6fG
qJkAQ+LXWY4odGBPmp5QK9ODd4k3WiY1BpCdGz0iHVoAmX5Vcq/ji+CrWMz9
i9gEqhNM/YI8M3iamZokkFvAlDfh3gz5Coi1RC71XrGCgsT2Owv3bKDbe6Xs
XeMquNnddT1dj4t1uG1Iu3bnEh78sfKhcq+RAOaR/TEpngQqpLX0+zgnMKyx
ldv3E1musEUEumJg7Zqr44cxF7AsYItYTUGWhE3SNlGRGXxukp2J5Mo/9jWH
IAf8QjttiUhTyLBMKUfqeeJQz2rk+MGgwQt1SHXueVJKE1LS4V/46wmSFZWT
mfwJ6ZHAcH4+hSSd7KlnzyBni7ynrHPIhz3dqU12pFKbYaISyWDNV4/yQgxZ
7CQc5lOR+XRqdpcXMn3jM4ztgzy2Nb3xWgDy37fA33e2Oz8=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{-Pi, Pi}, {-3.1415925253615216`, 
     3.1415925262742164`}}, {{-3.141592653589793, 
    3.141592653589793}, {-3.1415925253615216`, 3.1415925262742164`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685270375354426*^9, 3.685270417317894*^9}, 
   3.685270465495165*^9, {3.685270507596121*^9, 3.685270537343405*^9}, 
   3.6852708347037163`*^9, {3.6852709314786243`*^9, 3.685270944092916*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"error", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"(", 
     SqrtBox[
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"FullSimplify", "@", 
           RowBox[{"D", "[", 
            RowBox[{"thetaEst", ",", "out1"}], "]"}]}], ")"}], "2"], "out1"}],
        "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"FullSimplify", "@", 
           RowBox[{"D", "[", 
            RowBox[{"thetaEst", ",", "out2"}], "]"}]}], ")"}], "2"], 
        "out2"}]}]], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"out1", "->", "out1PhotonNumber"}], ",", 
      RowBox[{"out2", "\[Rule]", "out2PhotonNumber"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6820678088080873`*^9, 3.682067944460663*^9}, {
   3.682067999388639*^9, 3.6820680081866407`*^9}, 3.685269673585346*^9, {
   3.685269705891802*^9, 3.68526972002148*^9}, {3.6852699550557547`*^9, 
   3.685269959365356*^9}, {3.68527025139983*^9, 3.685270278139811*^9}}],

Cell[BoxData[
 SqrtBox[
  FractionBox["1", "n"]]], "Output",
 CellChangeTimes->{{3.682067817954678*^9, 3.6820678274160137`*^9}, {
   3.682067891012477*^9, 3.6820679024695168`*^9}, 3.682067947896003*^9, 
   3.682068008751247*^9, 3.6852692573003798`*^9, 3.685269604831563*^9, 
   3.6852699606573763`*^9, {3.685270252477285*^9, 3.6852702855592546`*^9}, 
   3.685270945252798*^9}]
}, Open  ]],

Cell["\<\
Hmmm, its gonna be tricky with the phase wrapping. See e.g. these \
measurements, where from 10-15 it would be ambiguous what the phase is...\
\>", "Text",
 CellChangeTimes->{{3.685270968238163*^9, 3.685270977956058*^9}, {
  3.685271041099183*^9, 3.685271062801352*^9}, {3.685271100762322*^9, 
  3.6852711008702507`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
VgX9IoaqX0zMa8ue/3S/KplzFv0iFg8sa75VC8dprH1Vvzj1aZYBzkkVv3yx
Six8mXMR5hJzim/nzsx2Kyoz6+FexikumfOC7petmn43gvALfa8o4he8f4km
qn6RnetVNnxYTjkK/aIT3u97Vb/ovn/RkW+634Zpv9TwSC/bl59eaI9MfDx3
/TdV/sqHnsfNKf1R9wvdlwL9El9U/eJn7DqR8P3UQegXPj265panU98cL0z4
xe8zDpgfRcUvovPq0vs885T7try5je3l5Zcy28GYL6xfePvAeyWiiPilbx/x
8FjQL+gXUVT9YoK/P4B+MZkmXnnCM0gVTPhFZux6HtAmqOIX2fMKltLp7tu6
+YWOT9QvMv3o6b4yTun3Mw9OEH6h+5rz/MLOZYN+iSZR8gv8rtNZDzg990C/
+I9Pd/sLLNAu7Ye6im5R8YvXnJsifgFn0H65a5jzeJwy8O5fRN8NFSEIv9Bh
8fzCjgeBfokmUfIL9EPUWQ+c3879+yidIqbTxBvfzU98XnU5DbTx6KznefDG
gzTpFy/KZrvHZ7frTxivv1x47fvsWDl+CNovB3LCQr/4p6ysjDRp0oQ0atSI
FBUVcbcZOHAgadiwIWnZsiVZtmxZ1nf79u0jrVq1IhdffLFjHFHyi/1emK56
4BCH7e3v4f3uqGC6bGEseZ11usxxqlpt3i+i9XRQfmG3Zxf7vmXoIP3lQj87
somzX3hhoV/8AW7Iy8sjVVVVZPfu3ZY/Kisrs7aZM2cO6dIldfO4aNEi0rZt
26zvx40bR6699lotfmHHMTYB/V6YyXrA/q7n5frS7hfTZcseP9N+mT0zs20Q
fqklGH5U/GIvhxooF/pZmA17D+kHEb/o+O3mFg97P45+kaO8vJzk5+enPxcW
Fubcw/Tt25dMm5Z5ubVp06Zkw4YN1t9r1qwh559/PlmwYIEWv+iqB9zweidc
t196XaEv7X4xXbYffhCsXyZNzGwLf5v2ix+3wLJ4kVwcItwx2H+6VMqFHs/O
Jmi/QFuSX2T8Qr9TFARx90tpaSkpKChIfy4pKbGehdF07dqVLFyYeRGlU6dO
ZOnSpdbfPXr0sJ6XvfPOO7HxC2+MfnoRnedQ1C+9r9aXdr90ON1s2X6w2Jxf
oBzZMGH8YrvP0w09o+8Xkd/bsul8e344fqHTahO0X7z6b/uNh/VL0FRnv8ya
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
CRMmTLDGpYJt27Vrlx5f46uvvrLmJ4K5Fc455xyycuXKnHhWrVpljWNrM336
dCseGJ/k3HPPTa+HuSIfeughs5lGEARBjMOOk0t/Br/AfNww/iiMGXjEEUek
5+aBsRHteYNhTKcvv/zS+hvmCaQ9YvPss8+SoUOHpj9DHPacDDCGus3ChQvJ
JZdcojmXCIIgSNB4+eXmm29OfwfzUNlOgPEswTEw3vUhhxxi3dPAvQgsp5xy
Sk48DzzwQHpuWqBfv37WfdHkyZOznpl98cUX1n0QgiAIEm+8/ELPYwdzG9ou
sL/76aefyHHHHecZzyOPPELuueeerHUwZ+3IkSOtcGFsaQDa+GE8dQRBECTe
gC+gfreR9Qtw9tlnk5dffjm93fLly3PieeONN0jPnj3Tn6HNxqZNmzbpfV55
5RXr3gZBEASJP9dee63lFLt938kv0MbP8wv0QYP2fZhvA56N8fogwzxPdD+1
yy67zIoHlsGDB6fXDxgwgMyaNctIPhEEQZBkAh556623HL+HuVmhX9q+ffsC
TBWCIAgSdzZu3Ehmzpzp+D207b/77rsBpghBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBxPj/lXOs
uA==
    "], {{0, 277}, {408, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{408, 277},
  PlotRange->{{0, 408}, {0, 277}}]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6852710374058113`*^9, 3.6852710385576677`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementation", "Subsubsection",
 CellChangeTimes->{{3.6852705944305897`*^9, 3.6852705974787207`*^9}}],

Cell["Current parameters:", "Text",
 CellChangeTimes->{{3.682063204265799*^9, 3.682063207233884*^9}}],

Cell["\<\
Measured 100000 photons per s when illuminating one side with 16 nW\
\>", "Text",
 CellChangeTimes->{{3.682222598876012*^9, 3.6822226451133347`*^9}, {
  3.685268911045575*^9, 3.6852689433323593`*^9}, {3.6852690445734367`*^9, 
  3.6852690452690268`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PhaseEstimCountsPerSPernW", "=", 
   RowBox[{"1*^5", "/", "16."}]}], ";"}]], "Input",
 CellChangeTimes->{{3.68206268778132*^9, 3.6820627298360786`*^9}, {
  3.6820631691789427`*^9, 3.68206321026617*^9}, {3.682063337105104*^9, 
  3.6820634276616287`*^9}, {3.685268946980837*^9, 3.6852689798027563`*^9}, {
  3.685269018607841*^9, 3.685269048379985*^9}}],

Cell["\<\
 50 ns dead time for apd. So probably shouldn\[CloseCurlyQuote]t have much \
more than one or two photons per \[Mu]s. 

How much power do we need for this?\
\>", "Text",
 CellChangeTimes->{{3.682063212121459*^9, 3.682063276512156*^9}, {
  3.682063539938545*^9, 3.68206356599514*^9}, {3.682064886278924*^9, 
  3.682064892516308*^9}, {3.685268989874344*^9, 3.685269002440351*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nWsToSaturateAPDs", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "1*^-6"}], ")"}], "/", 
   RowBox[{"(", "PhaseEstimCountsPerSPernW", ")"}]}]}]], "Input",
 CellChangeTimes->{{3.682063306000586*^9, 3.682063310978982*^9}, {
   3.682063457525128*^9, 3.682063472858728*^9}, {3.68206350309208*^9, 
   3.6820635566106*^9}, 3.6852690140219*^9, {3.685269052538447*^9, 
   3.6852690777666683`*^9}, {3.685269108020384*^9, 3.685269108040441*^9}, {
   3.68526913899894*^9, 3.685269162190679*^9}}],

Cell[BoxData["160.`"], "Output",
 CellChangeTimes->{{3.682063331022971*^9, 3.6820633427248898`*^9}, {
   3.682063469090559*^9, 3.6820634731457577`*^9}, {3.68206352927217*^9, 
   3.682063557393165*^9}, {3.6852690148457737`*^9, 3.6852690203822317`*^9}, 
   3.685269108828271*^9, 3.6852691629281893`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{983, 910},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 109, 1, 35, "Subsubsection"],
Cell[692, 25, 328, 4, 30, "Text"],
Cell[1023, 31, 845, 19, 133, "Input"],
Cell[1871, 52, 98, 1, 30, "Text"],
Cell[1972, 55, 1167, 36, 121, "Input"],
Cell[3142, 93, 350, 12, 28, "Input"],
Cell[CellGroupData[{
Cell[3517, 109, 247, 5, 28, "Input"],
Cell[3767, 116, 176, 4, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3980, 125, 483, 13, 35, "Input"],
Cell[4466, 140, 201, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4704, 150, 821, 25, 63, "Input"],
Cell[5528, 177, 191, 3, 28, "Output"],
Cell[5722, 182, 241, 3, 28, "Output"],
Cell[5966, 187, 257, 3, 28, "Output"],
Cell[6226, 192, 244, 3, 28, "Output"]
}, Open  ]],
Cell[6485, 198, 182, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6704, 207, 100, 1, 35, "Subsubsection"],
Cell[6807, 210, 180, 4, 30, "Text"],
Cell[6990, 216, 618, 16, 52, "Input"],
Cell[7611, 234, 561, 11, 49, "Input"],
Cell[CellGroupData[{
Cell[8197, 249, 1015, 29, 63, "Input"],
Cell[9215, 280, 17691, 303, 243, "Output"],
Cell[26909, 585, 4104, 80, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31050, 670, 1057, 29, 76, "Input"],
Cell[32110, 701, 376, 7, 56, "Output"]
}, Open  ]],
Cell[32501, 711, 331, 6, 49, "Text"],
Cell[32835, 719, 21781, 362, 292, "Input"],
Cell[54619, 1083, 96, 1, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54752, 1089, 109, 1, 35, "Subsubsection"],
Cell[54864, 1092, 101, 1, 30, "Text"],
Cell[54968, 1095, 263, 5, 30, "Text"],
Cell[55234, 1102, 385, 7, 28, "Input"],
Cell[55622, 1111, 388, 8, 68, "Text"],
Cell[CellGroupData[{
Cell[56035, 1123, 519, 10, 28, "Input"],
Cell[56557, 1135, 301, 4, 28, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

